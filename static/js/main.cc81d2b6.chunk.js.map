{"version":3,"sources":["components/jobsComponents.js","App.js","index.js"],"names":["JobComponent","job","handleTagClick","tags","role","level","languages","tools","className","featured","id","alt","company","src","logo","new","position","postedAt","contract","location","map","elemento","indice","onClick","App","useState","jobs","setJobs","filters","setFilters","useEffect","data","tag","includes","filterJobs","filter","length","every","passedFilter","f","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAiCeA,EAjCM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,eACnBC,EAAI,CACNF,EAAIG,KACJH,EAAII,OAFE,mBAGHJ,EAAIK,WAAa,IAHd,YAIHL,EAAIM,OAAS,KAGpB,OACI,sBAAKC,UAAS,kBAAaP,EAAIQ,UAAY,kBAAoBC,GAAIT,EAAIS,GAAvE,UACI,qBAAKF,UAAU,MAAMG,IAAKV,EAAIW,QAA9B,SACI,qBAAKC,IAAKZ,EAAIa,KAAMH,IAAKV,EAAIW,YAEjC,sBAAKJ,UAAU,SAAf,UACI,4BAAIP,EAAIW,UACPX,EAAIc,KAAQ,sBAAMP,UAAU,MAAhB,iBACZP,EAAIQ,UAAa,sBAAMD,UAAU,WAAhB,yBAEtB,sBAAKA,UAAU,OAAf,UACI,6BAAKP,EAAIe,WACT,8BACKf,EAAIgB,SADT,SACsBhB,EAAIiB,SAD1B,SACuCjB,EAAIkB,eAG/C,qBAAKX,UAAU,OAAf,SACKL,EAAKiB,KAAI,SAACC,EAAUC,GAAX,OACN,sBAAMC,QAAS,kBAAIrB,EAAemB,IAAYb,UAAU,SAAxD,SAA+Ea,GAATC,Y,OCqC3EE,MA5Df,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACAC,qBAAU,kBAAMH,EAAQI,KAAO,IAE/B,IAcM7B,EAAiB,SAAC8B,GAClBJ,EAAQK,SAASD,IACrBH,EAAW,GAAD,mBAAKD,GAAL,CAAcI,MAWpBE,EAAaR,EAAKS,QA3BL,SAAClC,GAClB,IAAME,EAAI,CACRF,EAAIG,KACJH,EAAII,OAFI,mBAGLJ,EAAIK,WAAa,IAHZ,YAILL,EAAIM,OAAS,KAGlB,OAAuB,IAAnBqB,EAAQQ,QAGLR,EAAQS,OAAM,SAAAF,GAAM,OAAGhC,EAAK8B,SAASE,SAkB9C,OACE,sBAAK3B,UAAU,MAAf,UACE,2BAIEoB,EAAQQ,OAAS,GACf,sBAAK1B,GAAG,SAAR,UACGkB,EAAQR,KACP,SAACe,EAAQb,GAAT,OACE,sBAAmBC,QAAS,kBApBpBe,EAoBuCH,OAnB3DN,EAAWD,EAAQO,QAAO,SAAAI,GAAC,OAAIA,IAAMD,MADlB,IAACA,GAoBR,SACGH,GADQb,MAIf,wBAAQd,UAAU,QAAQe,QApBhB,WAClBM,EAAW,KAmBH,sBAMY,IAAhBH,EAAKU,OAAgB,oDAA+BF,EAAWd,KAAI,SAACnB,GAAD,OAAS,cAAC,EAAD,CAAcA,IAAKA,EAAkBC,eAAgBA,GAAxBD,EAAIS,WCnDrH8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.cc81d2b6.chunk.js","sourcesContent":["const JobComponent = ({ job, handleTagClick }) => {  \r\n    const tags = [ \r\n        job.role,\r\n        job.level,\r\n        ...job.languages || [],\r\n        ...job.tools || []\r\n    ];\r\n\r\n    return (\r\n        <div className={`cuadros ${job.featured && 'borderFeatured'}`} id={job.id}>\r\n            <div className=\"img\" alt={job.company}>\r\n                <img src={job.logo} alt={job.company}/>\r\n            </div>\r\n            <div className=\"header\">\r\n                <p>{job.company}</p>\r\n                {job.new && (<span className=\"new\">NEW</span>)}\r\n                {job.featured && (<span className=\"featured\">FEATURED</span>)}\r\n            </div>\r\n            <div className=\"main\">\r\n                <h2>{job.position}</h2>\r\n                <p>\r\n                    {job.postedAt} · {job.contract} · {job.location}\r\n                </p>\r\n            </div>\r\n            <div className=\"tags\">\r\n                {tags.map((elemento, indice) => \r\n                    <span onClick={()=>handleTagClick(elemento)}  className=\"button\" key={indice}>{elemento}</span>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JobComponent;\r\n","import JobComponent from './components/jobsComponents';\nimport { useState, useEffect } from 'react';\nimport data from \"./assets/data.json\";\nfunction App() {\n  const [jobs, setJobs] = useState([]); \n  const [filters, setFilters] = useState([]);\n  useEffect(() => setJobs(data), []);\n\n  const filterFunc = (job) => { \n    const tags = [ \n      job.role,\n      job.level,\n      ...job.languages || [],\n      ...job.tools || []\n    ];\n\n    if (filters.length === 0) { \n      return true;\n    }\n    return filters.every(filter=> tags.includes(filter)) \n  }\n\n  const handleTagClick = (tag) => {\n    if (filters.includes(tag)) return;\n    setFilters([...filters, tag]);\n  }\n\n  const handleFilter = (passedFilter) => {\n    setFilters(filters.filter(f => f !== passedFilter))\n  };\n\n  const clearFilter = ()=>{ \n    setFilters([]);\n  }\n\n  const filterJobs = jobs.filter(filterFunc); \n\n  return (\n    <div className=\"App\">\n      <header>\n      </header>\n\n      {\n        filters.length > 0 && ( \n          <div id=\"search\">\n            {filters.map( \n              (filter, indice) =>                \n                <span key={indice} onClick={() => handleFilter(filter)}>\n                  {filter}\n                </span>\n            )}                                   \n            <button className=\"clear\" onClick={clearFilter}>Clear</button> \n          </div>\n        )\n      }\n\n      {                                                                                  \n        jobs.length === 0 ? (<p>Se esta cargando...</p>) : (filterJobs.map((job) => <JobComponent job={job} key={job.id} handleTagClick={handleTagClick} />))\n      }\n    </div>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/estilo/estilo.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}